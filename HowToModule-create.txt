------------------------moduleの作り方・使い方--------------------------
参考
(https://qiita.com/ShinKano/items/3e9f7813ff37379dd7ff)

$npm init
$ npm i --save パッケージ名

パッケージに必要な「package.json」が作成される
-------------------------sample.js側(module)---------------------------
Trans.prototype = {
	language : null,
	eng : "hello",
	ja : "こんにちは"
};

/*
以下、インスタンス(子)ではTrans.prototypeで定義したものがそのまま使える…？っぽい！
*/
function Trans(language){
	this.language = language;
	console.log(this.eng);
}

//Trans関数をエクスポート？(この一行で、別のプログラムでも使えるようになる。)
module.exports = Trans;

-----------------------------index.js側--------------------------------------
//sample.jsのパスを通す。「../」は一つ前のフォルダの意味
const ths = require('../node_modules/THS/main.js');
Console.log(ths.eng);などのように使う。

-----------------------------エンドユーザーの言語情報取得方法-------------------------------
https://www.atmarkit.co.jp/ait/articles/1603/23/news046.html
https://www.it-swarm-ja.tech/ja/javascript/nodejs%EF%BC%88expressjs%EF%BC%89%E3%81%A7%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E8%A8%80%E8%AA%9E%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B%E3%81%AB%E3%81%AF%E3%81%A9%E3%81%86%E3%81%99%E3%82%8C%E3%81%B0%E3%82%88%E3%81%84%E3%81%A7%E3%81%99%E3%81%8B%EF%BC%9F/1068008271/
[window npm パッケージ]
https://www.npmjs.com/package/window

-------------------------------公開パッケージ-------------------------------
